datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model Bank {
  id               BigInt    @id @default(autoincrement()) @db.BigInt
  name             String
  amount           String
  bank_template_id BigInt    @default(0)
  bank_type_id     BigInt
  budget_id        BigInt
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt
  deleted_at       DateTime?

  @@map("banks")
}

model BankTemplate {
  id                 BigInt    @id @default(autoincrement()) @db.BigInt
  name               String
  amount             String
  budget_template_id BigInt
  bank_type_id       BigInt
  created_at         DateTime  @default(now())
  updated_at         DateTime  @updatedAt
  deleted_at         DateTime?

  @@map("bank_templates")
}

model BankType {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  name       String
  slug       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("bank_types")
}

model BillType {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  name       String
  slug       String
  save_type  Boolean  @default(false)
  model      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("bill_types")
}

model Budgets {
  id           BigInt   @id @default(autoincrement()) @db.BigInt
  user_id      BigInt   @unique
  name         String
  budget_cycle DateTime
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user         Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("budgets")
}

model Users {
  id                        BigInt        @id @default(autoincrement()) @db.BigInt
  email                     String        @unique
  password                  String
  two_factor_secret         String?
  two_factor_recovery_codes String?
  remember_token            String?
  email_verified_at         DateTime?
  created_at                DateTime      @default(now())
  updated_at                DateTime      @updatedAt
  UserProfile               UserProfile?
  UserVehicles              UserVehicles?
  Budgets                   Budgets?

  @@map("users")
}

model UserProfile {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  user_id    BigInt   @unique
  first_name String
  last_name  String
  image      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("user_profile")
}

model UserVehicles {
  id         BigInt   @id @default(autoincrement()) @db.BigInt
  user_id    BigInt   @unique
  make       String
  model      String
  year       String
  color      String
  license    String?
  active     Boolean  @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("user_vehicles")
}
