type Auth {
  mfa: Boolean
  success: Boolean
}

type Base {
  success: Boolean
}

scalar DateTime

input ForgotPasswordInput {
  email: String!
}

input LoginInput {
  email: String!
  password: String!
  rememberMe: Boolean
}

type Mutation {
  forgotPassword(input: ForgotPasswordInput!): Auth!
  login(input: LoginInput!): Auth!
  logout: Auth!
  register: Auth!
}

type Query {
  getUser: User
}

type User {
  email: String!
  id: ID!
  isVerified: Boolean!
  profile: UserProfile!
  vehicles: [UserVehicle!]!
}

type UserProfile {
  firstName: String!
  fullName: String!
  id: ID!
  image: String!
  lastName: String!
}

type UserVehicle {
  active: Boolean!
  color: String!
  id: ID!
  isDeleted: Boolean!
  license: String
  make: String!
  model: String!
  year: String!
}